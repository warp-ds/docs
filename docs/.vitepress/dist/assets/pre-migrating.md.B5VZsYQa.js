import{_ as a,o as i,c as s,V as t}from"./chunks/framework.DS0mASGI.js";const g=JSON.parse('{"title":"Moving to Fabric, to prepare for Warp","description":"","frontmatter":{},"headers":[],"relativePath":"pre-migrating.md","filePath":"pre-migrating.md"}'),e={name:"pre-migrating.md"},n=t(`<h1 id="moving-to-fabric-to-prepare-for-warp" tabindex="-1">Moving to Fabric, to prepare for Warp <a class="header-anchor" href="#moving-to-fabric-to-prepare-for-warp" aria-label="Permalink to &quot;Moving to Fabric, to prepare for Warp&quot;">​</a></h1><h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h2><ul><li>Avoid use of <code>.button</code> and any semantic button classes <ul><li>Prefer the use of the Button component</li></ul></li><li>Avoid the use of <code>.input</code> and any semantic form element classes <ul><li>Prefer the use of the form element-components - e.g. <a href="https://react.fabric-ds.io/textfield" target="_blank" rel="noreferrer">TextField</a> in React or <a href="https://vue.fabric-ds.io/forms" target="_blank" rel="noreferrer">fInput</a> in Vue</li></ul></li><li>Fabric color shim?</li></ul><h2 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h2><h2 id="strings" tabindex="-1">Strings <a class="header-anchor" href="#strings" aria-label="Permalink to &quot;Strings&quot;">​</a></h2><p>Adopting a &quot;strings&quot; approach when refactoring will likely make internationalization easier.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>Instead of:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Welcome to FINN!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>prefer:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{ titles.welcome }&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,11),l=[n];function r(h,p,o,d,k,c){return i(),s("div",null,l)}const m=a(e,[["render",r]]);export{g as __pageData,m as default};
