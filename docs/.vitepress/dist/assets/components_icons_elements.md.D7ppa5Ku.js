import{_ as a,o as s,c as e,V as t}from"./chunks/framework.DS0mASGI.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"components/icons/elements.md","filePath":"components/icons/elements.md"}'),i={name:"components/icons/elements.md"},n=t('<h3 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h3><p>Import Elements icons individually to optimize your JS bundle size by adding only the icons you need:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@warp-ds/icons/elements/alert-16&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Don&#39;t import icons directly from the <code>@warp-ds/icons/elements</code> package, since this will add every Warp icon, and bloat your bundle.</p><h3 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">w-icon-bag-16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">w-icon-bag-16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Check out exact imports below in our Examples section</p><h3 id="styling" tabindex="-1">Styling <a class="header-anchor" href="#styling" aria-label="Permalink to &quot;Styling&quot;">​</a></h3><p>Elements icons are using shadow-dom to encapsulate their styles. As a result, you can’t simply target their internals with the usual CSS selectors. Instead, components expose “parts” that can be targeted with <code>part-[iconname-part]:classname</code>. Here&#39;s an example that sets the width &amp; height of an icon:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">w-icon-bag-16</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;part-[w-icon-bag-16-part]:w-64 part-[w-icon-bag-16-part]:h-64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">w-icon-bag-16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="colors" tabindex="-1">Colors <a class="header-anchor" href="#colors" aria-label="Permalink to &quot;Colors&quot;">​</a></h3><p>The color of the icon will default to <code>currentColor</code>. Colors can be changed using <a href="https://warp-ds.github.io/css-docs/icon-color#icon-color" target="_blank" rel="noreferrer">semantic color classes for icons</a>.</p><h3 id="fabric-to-warp" tabindex="-1">Fabric to WARP <a class="header-anchor" href="#fabric-to-warp" aria-label="Permalink to &quot;Fabric to WARP&quot;">​</a></h3><p>We have changed the naming for these icons, so the old icons in Fabric were <code>f-icon-bag16</code> while the new icons in WARP is named as <code>w-icon-bag-16</code></p>',14),o=[n];function l(h,r,c,p,d,k){return s(),e("div",null,o)}const u=a(i,[["render",l]]);export{m as __pageData,u as default};
