import{_ as s,o as i,c as a,V as t}from"./chunks/framework.DS0mASGI.js";const E=JSON.parse('{"title":"Getting started for iOS developers","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/ios/index.md","filePath":"getting-started/ios/index.md"}'),e={name:"getting-started/ios/index.md"},n=t(`<h1 id="getting-started-for-ios-developers" tabindex="-1">Getting started for iOS developers <a class="header-anchor" href="#getting-started-for-ios-developers" aria-label="Permalink to &quot;Getting started for iOS developers&quot;">​</a></h1><p>This page describes how to get started building an application with Warp components.</p><p>If you have any questions or need clarification, please don&#39;t hesitate to reach out to the Warp team on the #nmp-warp-design-system channel on Slack!</p><h2 id="_1-integrate-warp" tabindex="-1">1. Integrate Warp <a class="header-anchor" href="#_1-integrate-warp" aria-label="Permalink to &quot;1. Integrate Warp&quot;">​</a></h2><p>A guide on how to integrate Warp into your project.</p><h3 id="swift-package-manager" tabindex="-1">Swift Package Manager <a class="header-anchor" href="#swift-package-manager" aria-label="Permalink to &quot;Swift Package Manager&quot;">​</a></h3><p>You can use the url for Warp on Xcode default package manager or use it like below in your Package.swift file:</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/warp-ds/warp-ios.git&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>You can use a specific branch or version, but we suggest using our latest version like this to avoid conflict between dependencies:</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/warp-ds/warp-ios.git&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;999.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="_2-apply-theme" tabindex="-1">2. Apply theme <a class="header-anchor" href="#_2-apply-theme" aria-label="Permalink to &quot;2. Apply theme&quot;">​</a></h2><p>To start using Warp you must first initialize the theme depending on the selected target of the project.</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Warp.Config.warpTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .tori</span></span></code></pre></div><p>Right now we support <code>.finn</code> and <code>.tori</code> with <code>.finn</code> as the default one.</p><h2 id="_3-use-warp-components" tabindex="-1">3. Use Warp components <a class="header-anchor" href="#_3-use-warp-components" aria-label="Permalink to &quot;3. Use Warp components&quot;">​</a></h2><p>Use the Warp components just like any other SwiftUI or UIKit view. The selected target will give it the correct colors and styling.</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Warp.Button.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .primary,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">systemName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="legacy-support" tabindex="-1">Legacy support <a class="header-anchor" href="#legacy-support" aria-label="Permalink to &quot;Legacy support&quot;">​</a></h3><p>All Warp components will provide a bridge to be able to use with legacy code. Check each component&#39;s documentations for more information.</p>`,19),p=[n];function h(l,r,o,k,d,c){return i(),a("div",null,p)}const u=s(e,[["render",h]]);export{E as __pageData,u as default};
